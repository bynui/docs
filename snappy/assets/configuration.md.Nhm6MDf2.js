import{_ as s,c as t,o as a,ag as n}from"./chunks/framework.Bw-5EFTY.js";const g=JSON.parse('{"title":"Snappy configuration","description":"Configure Snappy using global, custom, and environment-specific settings","frontmatter":{"title":"Snappy configuration","head":[["meta",{"name":"description","content":"Configure Snappy using global, custom, and environment-specific settings"}],["meta",{"name":"robots","content":"index,follow"}],["meta",{"name":"keywords","content":"snappy configuration, php framework, light php framework, api generator, php api generator, OOP framework, xml generator, json generator, jsonp generator, html generator"}],["meta",{"name":"author","content":"Shindu Samodra"}],["meta",{"property":"article:author","content":"Shindu Samodra"}],["meta",{"property":"og:title","content":"Snappy configuration"}],["meta",{"property":"og:site_name","content":"Snappy: straight-forward framework"}],["meta",{"property":"og:type","content":"Documentation website"}],["meta",{"property":"og:description","content":"Configure Snappy using global, custom, and environment-specific settings"}],["meta",{"property":"og:url","content":"https://bynui.github.io/snappy/configuration.html"}]]},"headers":[],"relativePath":"configuration.md","filePath":"configuration.md"}'),e={name:"configuration.md"};function o(p,i,h,l,r,d){return a(),t("div",null,i[0]||(i[0]=[n(`<h1 id="manual" tabindex="-1">Manual <a class="header-anchor" href="#manual" aria-label="Permalink to &quot;Manual&quot;">‚Äã</a></h1><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">‚Äã</a></h2><p>Default configurations are categorized as:</p><ul><li><p>app configuration</p></li><li><p>env-based configuration</p></li><li><p>custom configuration</p><p>Those files are located under <code>config/</code>.</p></li></ul><p>üí° <strong>Usage</strong></p><div class="tip custom-block"><p class="custom-block-title">Get configuration value from config file name</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $key, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $configname </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;environment&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">mixed</span></span></code></pre></div><p><strong><code>key</code></strong></p><p>‚ÄÉ A dot notation (e.g: <code>data.name.last</code>)</p><p><strong><code>configname</code></strong> (optional)</p><p>‚ÄÉ Your configuration file name without extension</p></div><div class="tip custom-block"><p class="custom-block-title">Check a configuration key if has value from config file name</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $key, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $configname </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;environment&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span></span></code></pre></div><p><strong><code>key</code></strong></p><p>‚ÄÉ A dot notation (e.g: <code>data.name.last</code>)</p><p><strong><code>configname</code></strong> (optional)</p><p>‚ÄÉ Your configuration file name without extension</p></div><div class="tip custom-block"><p class="custom-block-title">Get all configurations from config file name</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">allConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $configname </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;environment&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">mixed</span></span></code></pre></div><p><strong><code>configname</code></strong> (optional)</p><p>‚ÄÉ Your configuration file name without extension</p></div><div class="warning custom-block"><p class="custom-block-title">‚ÑπÔ∏è NOTE</p><p><code>configname</code> default value is &quot;environment&quot;. If you don&#39;t supply <code>configname</code> parameter, it gets environment-based configuration and will give result following the environment already defined in <code>env</code> (for example: development or staging or production)</p></div><h2 id="app-configuration" tabindex="-1">App configuration <a class="header-anchor" href="#app-configuration" aria-label="Permalink to &quot;App configuration&quot;">‚Äã</a></h2><p>It&#39;s located in <code>config/app.php</code>. You can add, change the configuration or create your own config file for your need</p><table tabindex="0"><thead><tr><th>Config</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>lctime</code></td><td>String</td><td>Local region information.</td></tr><tr><td><code>timezone</code></td><td>String</td><td>Your app time zone. List can be seen <a href="https://www.php.net/manual/en/timezones.php" target="_blank" rel="noreferrer">here</a>.</td></tr><tr><td><code>supportHtaccess</code></td><td>Boolean</td><td>htaccess support in your server. Setting true or false whether your server doesn&#39;t support htaccess or you don&#39;t use htaccess. <br> <code>mod_rewrite</code> support is explained in <a href="/controller-routing.html#mod-rewrite-support">Routing</a> page.</td></tr><tr><td><code>connectionheader</code></td><td>String</td><td>Controls whether the network connection stays open after the current transaction finishes.<br>The detail is explained in <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Connection" target="_blank" rel="noreferrer">this page</a>.</td></tr><tr><td><code>errorformat</code></td><td>String</td><td>Output format for error as JSON, XML or HTML.<br>The detail is explained in <a href="/error-handler.html">this page</a></td></tr></tbody></table><p><em>Example</em>:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;settings.timezone&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// output: Asia/Jakarta</span></span></code></pre></div><h2 id="environment-based-configuration" tabindex="-1">Environment-based configuration <a class="header-anchor" href="#environment-based-configuration" aria-label="Permalink to &quot;Environment-based configuration&quot;">‚Äã</a></h2><p>Snappy supports environment-based configuration, allowing you to define different settings for development, testing, and production. This helps your application automatically load the appropriate configuration based on the current environment.</p><p>Environment-based configuration is taking from <code>config/environment.php</code></p><table tabindex="0"><thead><tr><th>Config</th><th>Description</th></tr></thead><tbody><tr><td><code>db</code></td><td>database connection configuration.</td></tr><tr><td><code>view</code></td><td>location of your template files.</td></tr><tr><td><code>email</code></td><td>your email configuration.</td></tr><tr><td><code>assets</code></td><td>location of your assets files such as images, videos etc.</td></tr><tr><td><code>showerror</code></td><td>to show/hide error message in the response body.</td></tr><tr><td><code>logerror</code></td><td>to log error message in a file under <code>log/</code> directory.</td></tr></tbody></table><p><em>Example</em>:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;showerror&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h2 id="custom-configuration" tabindex="-1">Custom configuration <a class="header-anchor" href="#custom-configuration" aria-label="Permalink to &quot;Custom configuration&quot;">‚Äã</a></h2><p>Create a file under <code>config/</code> directory containing an associative array. You may also define nested associative arrays if needed. The file name will be the config name.</p><p><em>Example</em>:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config/myconfig.php</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;list&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;john&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;doe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;jane&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;dane&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;anotherconfig&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          &quot;subconfig&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 123</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;name&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;John Doe&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// accessing custom config</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;list.john&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myconfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//output: doe</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;list.anotherconfig.subconfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myconfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//output: 123</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myconfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//output: John Doe</span></span></code></pre></div>`,24)]))}const c=s(e,[["render",o]]);export{g as __pageData,c as default};
