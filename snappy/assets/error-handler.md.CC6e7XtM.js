import{_ as s,c as i,o as e,ag as n}from"./chunks/framework.Bw-5EFTY.js";const c=JSON.parse('{"title":"Snappy error handler","description":"Snappy custom error handler centralized error management with clean logs and flexible output in JSON, XML, or HTML making debugging easier and applications more reliable.","frontmatter":{"title":"Snappy error handler","head":[["meta",{"name":"description","content":"Snappy custom error handler centralized error management with clean logs and flexible output in JSON, XML, or HTML making debugging easier and applications more reliable."}],["meta",{"name":"robots","content":"index,follow"}],["meta",{"name":"keywords","content":"Snappy, error handler, error handling format in JSON, error handling format in XML, error handling format in HTML."}],["meta",{"name":"author","content":"Shindu Samodra"}],["meta",{"property":"article:author","content":"Shindu Samodra"}],["meta",{"property":"og:title","content":"Snappy error handler"}],["meta",{"property":"og:site_name","content":"Snappy: straight-forward framework"}],["meta",{"property":"og:type","content":"Documentation website"}],["meta",{"property":"og:description","content":"Snappy custom error handler centralized error management with clean logs and flexible output in JSON, XML, or HTML making debugging easier and applications more reliable."}],["meta",{"property":"og:url","content":"https://bynui.github.io/snappy/middleware.html"}]]},"headers":[],"relativePath":"error-handler.md","filePath":"error-handler.md"}'),r={name:"error-handler.md"};function t(p,a,l,o,h,d){return e(),i("div",null,a[0]||(a[0]=[n(`<h1 id="error-handler" tabindex="-1">Error Handler <a class="header-anchor" href="#error-handler" aria-label="Permalink to &quot;Error Handler&quot;">‚Äã</a></h1><p>Snappy has error handler that centralizes error management and streamlines debugging. It supports flexible output formats ‚Äî JSON, XML, and HTML ‚Äî making it ideal for both APIs and web applications.</p><p>Settings related to error handling are: <code>errorformat</code>, <code>showerror</code>, <code>logerror</code> and is explained in <a href="/configuration.html">this page</a></p><h2 id="error-catching" tabindex="-1">Error catching <a class="header-anchor" href="#error-catching" aria-label="Permalink to &quot;Error catching&quot;">‚Äã</a></h2><p>üí° <strong>Usage</strong></p><div class="tip custom-block"><p class="custom-block-title">catch error</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\Core\\Error\\ErrorWrapper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Throwable</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $input, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $code </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p><strong><code>input</code></strong></p><p>‚ÄÉ String message or Throwable object</p><p><strong><code>code</code></strong> (optional)</p><p>‚ÄÉ HTTP response status code</p></div><p><em>Examples:</em></p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// with try-catch</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // your logic here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\Throwable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $e){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\Core\\Error\\ErrorWrapper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($e);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// without try-catch</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">undefinedFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// call an undefined function or anything that cause error</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\Core\\Error\\ErrorWrapper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Error undefined function&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">404</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">‚ÑπÔ∏è NOTE</p><p>If the error code doesn&#39;t represent HTTP error response then Error Handler will produce error 500</p></div>`,9)]))}const g=s(r,[["render",t]]);export{c as __pageData,g as default};
